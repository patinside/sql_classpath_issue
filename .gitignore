**/classes
**/target
**/.cpcache
*.iml
.idea
.nrepl-port
*.bkp
out
GeoLite2-City.mmdb
*.zip
**/.DS_Store

# Global resources folder (generated Codox doc)
resources/**
!resources/.keep

# clojure-lsp
.lsp/sqlite*.db

# Calva
.calva/output-window/output.calva-repl

# clj-kondo cache
.clj-kondo/.cache

# nodejs
**/node_modules
*.env

# Portal
.portal

# TypeScript incremental compilation cache
*.tsbuildinfo

# Yarn related
yarn-error.log*

# Clerk cache
.clerk
/doc/notebooks/resources/public/build/

# Flow storm personal config
.flow-storm/*

# Lsp cache
.lsp/.cache

# Local files
scratch/*

# Geoip local base
components/geoip/resources/geoip/*

# Terraform
# env variables file
**/.env.sh
**/.env.iago.sh
**/.env.stage.sh
**/.env.production.sh

# Local .terraform directories
**/.terraform/*

# .tfstate files
**/*.tfstate
**/*.tfstate.*

# Crash log files
**/crash.log
**/crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
**/*.tfvars
**/*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
**/override.tf
**/override.tf.json
**/*_override.tf
**/*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
**/*.plan

# Ignore CLI configuration files
**/.terraformrc
**/terraform.rc

**/.terraform*

# Ignore lambda function zip file
**/lambda_function.zip
